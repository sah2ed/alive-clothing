swagger: "2.0"
info:
  version: "1.0.0"
  title: Aerohive - Alive Clothing API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api
tags:
  - name: user
    description: User operations
  - name: customer
    description: Customer operations
  - name: store
    description: Store operations
  - name: device
    description: Device operations
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /auth/login:
    x-swagger-router-controller: authController
    post:
      tags:
        - user
      summary: User (store staff) authentication
      description: Logs a user into the app
      operationId: login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: username
          in: formData
          description: The login user name
          required: true
          type: string
        - name: password
          in: formData
          description: The login password
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Success"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error" 
  /auth/logout:
    x-swagger-router-controller: authController
    get:
      tags:
        - user
      summary: Logs out the current user session
      description: ""
      operationId: logout
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: Success
          schema:
            $ref: "#/definitions/Success"
  /user:
    x-swagger-router-controller: userController
    post:
      tags:
        - user
      summary: User (store staff) sign up
      description: Adds a new user into the app
      operationId: add
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: username
          in: formData
          description: The login user name
          required: true
          type: string
        - name: password
          in: formData
          description: The login password
          required: true
          type: string
        - name: firstName
          in: formData
          description: The first name
          required: true
          type: string
        - name: lastName
          in: formData
          description: The last name
          required: true
          type: string
        - name: email
          in: formData
          description: The email address
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Success"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error" 
  "/user/{username}":
    x-swagger-router-controller: userController
    get:
      tags:
        - user
      summary: Get user by user name
      description: ""
      operationId: findByUsername
      consumes:
        - application/json      
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: "The name that needs to be fetched. Use user1 for testing. "
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid username supplied
          schema:
            $ref: "#/definitions/Error" 
        "404":
          description: User not found            
          schema:
            $ref: "#/definitions/Error" 
  /customer:
    x-swagger-router-controller: customerController
    get:
      tags:
        - customer
      summary: Fetches all customers
      description: The customer list includes VIPs
      operationId: getCustomers
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: Success
          schema:
            $ref: "#/definitions/Success"
    post:
      tags:
        - customer
      summary: Add a New Customer
      description: Adds a new customer into the app
      operationId: addCustomer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: firstName
          in: formData
          description: The first name
          required: true
          type: string
        - name: lastName
          in: formData
          description: The last name
          required: true
          type: string
        - name: email
          in: formData
          description: The email address
          required: true
          type: string
        - name: phone
          in: formData
          description: The phone number
          required: true
          type: string
        - name: country
          in: formData
          description: The customer's country
          required: true
          type: string
        - name: isVIP
          in: formData
          description: The customer status
          required: true
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Success"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"           
        
  "/customer/{id}":
    x-swagger-router-controller: customerController
    get:
      tags:
        - customer
      summary: Get a customer by Id
      description: ""
      operationId: getCustomerById
      consumes:
        - application/json      
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: "The id of the customer. Use the _id for testing."
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Customer"
        "400":
          description: Invalid id supplied
          schema:
            $ref: "#/definitions/Error" 
        "404":
          description: Id not found            
          schema:
            $ref: "#/definitions/Error" 
  
  /device:
    x-swagger-router-controller: deviceController
    get:
      tags:
        - device
      summary: Fetches all devices
      description: The device list includes owner info
      operationId: getDevices
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: Success
          schema:
            $ref: "#/definitions/Success"
    post:
      tags:
        - device
      summary: Add a New Device
      description: Adds a new device into the app
      operationId: addDevice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ownerFirstName
          in: formData
          description: The owner's first name
          required: true
          type: string
        - name: ownerLastName
          in: formData
          description: The owner's last name
          required: true
          type: string
        - name: deviceName
          in: formData
          description: The device name on the network
          required: true
          type: string
        - name: deviceType
          in: formData
          description: The device type
          required: true
          type: string
        - name: macAddress
          in: formData
          description: The device's hardware address
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Success"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"           
  
  /store/surge:
    x-swagger-router-controller: storeController
    get:
      tags:
        - store
      summary: The surge settings determine when alerts are shown in-app
      description: Fetches store surge settings
      operationId: getSurgeSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: Success
          schema:
            $ref: "#/definitions/Success"
    post:
      tags:
        - store
      description: Update the store surge settings
      operationId: updateSurgeSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: customerAlertThreshold
          in: formData
          description: 'The # of simultaenous in-store customers at which in-app alerts will appear'
          required: true
          type: integer
        - name: customerAlertWindow
          in: formData
          description: 'The elapsed time (in minutes) before the customer threshold alert is triggered in-app'
          required: true
          type: integer
        - name: customerAlertThresholdTotal
          in: formData
          description: 'The # of total in-store customers at which in-app alerts will appear'
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Success"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"         
  /store/presence:
    x-swagger-router-controller: storeController
    post:
      tags:
        - store
      summary: The webhook endpoint for presence notices shown in-app
      description: Collects presence info sent by Aerohive HiveManager
      operationId: collectPresence
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - name: body
          in: formData
          description: 'The request body'
          required: false
          type: string
      responses:
        default:
          description: Success
          schema:
            $ref: "#/definitions/Success"          
                  
  #  serves up the swagger file
  /swagger:
    x-swagger-pipe: swagger_raw


# Schema definitions
definitions:
  Success:
    required:
      - message
    properties:
      message:
        type: string
  Error:
    required:
      - message
    properties:
      message:
        type: string
        
  User:
    required:
      - username
      - password
      - firstName
      - lastName
      - email
    properties:
      username:
        type: string
      password:
        type: string
        description: The hashed password
      firstName:
        type: string 
      lastName:
        type: string
      email:
        type: string
      phone:
        type: string
        
  Customer:
    required:
      - firstName
      - lastName
      - email
      - phone
      - country
      - isVIP
    properties:
      _id:
        type: string
      firstName:
        type: string 
      lastName:
        type: string
      email:
        type: string
      phone:
        type: string      
      country:
        type: string
      isVIP:
        type: boolean
      purchaseNote:
        type: string
        
      